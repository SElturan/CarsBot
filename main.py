
from config import bot, dp 
from aiogram import executor
from keyboards.keyboard import get_keyboard
from aiogram.types import Message
from handlers.base import is_user_registered, is_address_registered
from handlers.aplications import Applications
from handlers.callback import HandleMessage
from handlers.handler_uk_admin import HandleMessageUK, HandleMessageAdmin
from aiogram.dispatcher import FSMContext



class BotMain:
    def __init__(self):
        dp.register_message_handler(self.handle_commands, commands=['start','help','open'])
        dp.register_message_handler(self.handle_message,state='*', text = ['üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', 'üöò –°–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤', 'üèô –°–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤', 'üìç –¢–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–ï—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å', '–£–¥–∞–ª–∏—Ç—å –Ω–æ–º–µ—Ä', '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä', '–ù–∞–∑–∞–¥', '–î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å',  '–£–¥–∞–ª–∏—Ç—å –∞–¥—Ä–µ—Å', '–ù–∞–∑–∞–¥', '–Ø –ø–µ—à–µ—Ö–æ–¥'])
        # dp.register_message_handler(self.back_user, state='*', text='–ù–∞–∑–∞–¥')
        dp.register_message_handler(self.handle_message_uk,state='*', text = ['üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É', 'üèô –°–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ –£–ö',  '–ü–æ –∞–¥—Ä–µ—Å—É üåÖ' , '–ü–æ –≤—Å–µ–º –∞–¥—Ä–µ—Å–∞–º üåÖ', '–ü–æ –Ω–æ–º–µ—Ä—É –∞–≤—Ç–æ üöò', '–ù–∞–∑–∞–¥ üîô',  ])
        dp.register_message_handler(self.handle_message_admin, text = ['–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É üì®', 'üèô –°–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ –£–ö',  'üåÖ –ü–æ –∞–¥—Ä–µ—Å—É' , 'üèö –ü–æ –Ω–æ–º–µ—Ä—É –¥–æ–º–∞','–í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', 'üöò –ü–æ –Ω–æ–º–µ—Ä—É –∞–≤—Ç–æ', '–ù–∞–∑–∞–¥ ‚óÄ',  ])


        


    async def handle_commands(self, message: Message):
        if message.text == '/start':
            user_id = message.from_user.id
            chekc_user = await is_user_registered(user_id)
            
            if chekc_user:
                if chekc_user[0]['role'] == 'UK':
                    await message.answer('–í—ã  –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –£–ö', reply_markup=get_keyboard('uk'))

                elif chekc_user[0]['role'] == 'admin':
                    await message.answer('–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', reply_markup=get_keyboard('admin'))
                
                else:
                    await message.answer('–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', reply_markup=get_keyboard('user'))
            else:
                await message.answer('–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã\n–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é', reply_markup=get_keyboard('start'))


            




 


    async def handle_message(self, message: Message, state: FSMContext):
        handle_message = HandleMessage(message)

        if message.text == '–Ø –ø–µ—à–µ—Ö–æ–¥':
            applications = Applications(message)
            await applications.aplications_people(message)
            
        elif message.text == '–ï—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å':
            applications = Applications(message)
            await applications.aplications_car(message)
            

    
        elif message.text == 'üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ':
            
            await handle_message.message_car(message)

        elif message.text == 'üöò –°–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤':
            await handle_message.list_number(message)


        elif message.text == 'üèô –°–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤':
            await handle_message.list_address(message)


        elif message.text == 'üìç –¢–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∞':
            await message.answer('–¢–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∞')

        elif message.text == '–£–¥–∞–ª–∏—Ç—å –Ω–æ–º–µ—Ä':
           await handle_message.delete_num(message)

        elif message.text == '–ù–∞–∑–∞–¥':

            current_state = await state.get_state()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            if current_state is not None:
                # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
                await state.finish()
                await bot.send_message(chat_id=message.chat.id, text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=get_keyboard('user'))

            else:
                await bot.send_message(chat_id=message.chat.id, text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=get_keyboard('user'))

    

        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä':
            await handle_message.add_num_cars(message)

        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å':
            await handle_message.add_address(message)

        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å ‚Ññ –¥–æ–º–∞':
            await handle_message.add_house_num(message)

        elif message.text == '–£–¥–∞–ª–∏—Ç—å –∞–¥—Ä–µ—Å':
            await handle_message.delete_address(message)

        else:
            await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É')


    async def handle_message_uk(self, message: Message, state: FSMContext):
        handle_message = HandleMessageUK(message)

        if message.text == 'üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É':
            await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏!', reply_markup=get_keyboard('uk_malling_list'))
            
        elif message.text == 'üèô –°–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ –£–ö':
            await handle_message.list_address_uk(message)

        elif message.text == '–ü–æ –∞–¥—Ä–µ—Å—É üåÖ':
            await handle_message.mailing_address_handle(message)


        elif message.text == '–ü–æ –≤—Å–µ–º –∞–¥—Ä–µ—Å–∞–º üåÖ':
            # await handle_message.mailing_house_number(message)
            await message.answer('–ö–ù–æ–ø–∫–∞ –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Ç–∞–º –ª–æ–≥–∏–∫–∞ —Ç–æ—á–Ω–æ —Ç–∞–∫–∞—è –∂–µ –∫–∞–∫ –∏ —Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ –∞–¥—Ä–µ—Å—É, —Ç–æ–ª—å–∫–æ –ø–æ –≤—Å–µ–º –∞–¥—Ä–µ—Å–∞–º')

        elif message.text == '–ü–æ –Ω–æ–º–µ—Ä—É –∞–≤—Ç–æ üöò':
            await handle_message.mailing_car_number_uk(message)

        elif message.text == '–ù–∞–∑–∞–¥ üîô':
            await handle_message.back_uk(message, state)
        else:
            await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É')
        

    
    async def handle_message_admin(self, message: Message):
        handle_message = HandleMessageAdmin(message)

        if message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É üì®':
            await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏!', reply_markup=get_keyboard('admin_malling_list'))

        elif message.text == 'üåÖ –ü–æ –∞–¥—Ä–µ—Å—É':
            await handle_message.mailing_address_admin(message)

        elif message.text == 'üöò –ü–æ –Ω–æ–º–µ—Ä—É –∞–≤—Ç–æ':
            await handle_message.mailing_car_number_admin(message)

        elif message.text == 'üèö –ü–æ –Ω–æ–º–µ—Ä—É –¥–æ–º–∞':
            await handle_message.mailing_house_number_admin(message)
        
        elif message.text == '–í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º':
            await handle_message.mailing_address_all_user(message)

        elif message.text == '–ù–∞–∑–∞–¥ ‚óÄ':
            await message.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=get_keyboard('admin'))

      
        else:
            await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É')
            




if __name__ == '__main__':
    BotMain()
    executor.start_polling(dp, skip_updates=True)